Classfile /Users/dntam/Projects/java/java-notes/src/main/java/bytecode/Lambda.class
  Last modified Jul 15, 2025; size 1201 bytes
  SHA-256 checksum 0f5f903184de566348ab011bf34e8916c57b5beeaa45b4feee1ad861281faa9f
  Compiled from "Lambda.java"
public class bytecode.Lambda
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #28                         // bytecode/Lambda
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 3
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = InvokeDynamic      #0:#8          // #0:run:()Ljava/lang/Runnable;
   #8 = NameAndType        #9:#10         // run:()Ljava/lang/Runnable;
   #9 = Utf8               run
  #10 = Utf8               ()Ljava/lang/Runnable;
  #11 = Class              #12            // java/lang/Thread
  #12 = Utf8               java/lang/Thread
  #13 = Methodref          #11.#14        // java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
  #14 = NameAndType        #5:#15         // "<init>":(Ljava/lang/Runnable;)V
  #15 = Utf8               (Ljava/lang/Runnable;)V
  #16 = Methodref          #11.#17        // java/lang/Thread.start:()V
  #17 = NameAndType        #18:#6         // start:()V
  #18 = Utf8               start
  #19 = Methodref          #11.#20        // java/lang/Thread.join:()V
  #20 = NameAndType        #21:#6         // join:()V
  #21 = Utf8               join
  #22 = Fieldref           #23.#24        // java/lang/System.out:Ljava/io/PrintStream;
  #23 = Class              #25            // java/lang/System
  #24 = NameAndType        #26:#27        // out:Ljava/io/PrintStream;
  #25 = Utf8               java/lang/System
  #26 = Utf8               out
  #27 = Utf8               Ljava/io/PrintStream;
  #28 = Class              #29            // bytecode/Lambda
  #29 = Utf8               bytecode/Lambda
  #30 = String             #31            // Hello
  #31 = Utf8               Hello
  #32 = Methodref          #33.#34        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #33 = Class              #35            // java/io/PrintStream
  #34 = NameAndType        #36:#37        // println:(Ljava/lang/String;)V
  #35 = Utf8               java/io/PrintStream
  #36 = Utf8               println
  #37 = Utf8               (Ljava/lang/String;)V
  #38 = Utf8               HELLO
  #39 = Utf8               Ljava/lang/String;
  #40 = Utf8               ConstantValue
  #41 = Utf8               Code
  #42 = Utf8               LineNumberTable
  #43 = Utf8               main
  #44 = Utf8               ([Ljava/lang/String;)V
  #45 = Utf8               Exceptions
  #46 = Class              #47            // java/lang/Exception
  #47 = Utf8               java/lang/Exception
  #48 = Utf8               lambda$main$0
  #49 = Utf8               SourceFile
  #50 = Utf8               Lambda.java
  #51 = Utf8               BootstrapMethods
  #52 = MethodHandle       6:#53          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #53 = Methodref          #54.#55        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #54 = Class              #56            // java/lang/invoke/LambdaMetafactory
  #55 = NameAndType        #57:#58        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #56 = Utf8               java/lang/invoke/LambdaMetafactory
  #57 = Utf8               metafactory
  #58 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #59 = MethodType         #6             //  ()V
  #60 = MethodHandle       6:#61          // REF_invokeStatic bytecode/Lambda.lambda$main$0:()V
  #61 = Methodref          #28.#62        // bytecode/Lambda.lambda$main$0:()V
  #62 = NameAndType        #48:#6         // lambda$main$0:()V
  #63 = Utf8               InnerClasses
  #64 = Class              #65            // java/lang/invoke/MethodHandles$Lookup
  #65 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #66 = Class              #67            // java/lang/invoke/MethodHandles
  #67 = Utf8               java/lang/invoke/MethodHandles
  #68 = Utf8               Lookup
{
  public bytecode.Lambda();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public static void main(java.lang.String[]) throws java.lang.Exception;
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=1
         0: invokedynamic #7,  0              // InvokeDynamic #0:run:()Ljava/lang/Runnable;
         5: astore_1
         6: new           #11                 // class java/lang/Thread
         9: dup
        10: aload_1
        11: invokespecial #13                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
        14: astore_2
        15: aload_2
        16: invokevirtual #16                 // Method java/lang/Thread.start:()V
        19: aload_2
        20: invokevirtual #19                 // Method java/lang/Thread.join:()V
        23: return
      LineNumberTable:
        line 7: 0
        line 8: 6
        line 9: 15
        line 10: 19
        line 11: 23
    Exceptions:
      throws java.lang.Exception
}
SourceFile: "Lambda.java"
BootstrapMethods:
  0: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #59 ()V
      #60 REF_invokeStatic bytecode/Lambda.lambda$main$0:()V
      #59 ()V
InnerClasses:
  public static final #68= #64 of #66;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
